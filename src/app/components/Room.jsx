/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.glb 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'

export function Room(props) {
  const { nodes, materials } = useGLTF('/scene.glb')
  return (
    <group {...props} dispose={null}   
      scale={10}
    //   onPointerOver={(e) => e.object.material.color.set("red")}
    //   onPointerOut={(e) => e.object.material.color.set("orange")}
      >
      <group position={[1.338, 0, 0.811]} scale={2.091}>
        <mesh geometry={nodes.Plane001.geometry} material={nodes.Plane001.material} />
        <mesh geometry={nodes.Plane001_1.geometry} material={materials.Default} />
      </group>
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[1.338, 2.264, -1.518]} scale={[-0.883, -0.295, -0.295]} />
      <mesh geometry={nodes.Cube007_Cube008.geometry} material={materials.GrayPlastic} position={[2.915, 0, 0]} rotation={[-Math.PI, 0.012, -Math.PI]}
            // onPointerOver={(e) => e.object.material.color.set("white")}
            // onPointerOut={(e) => e.object.material.color.set("black")}
            >
        <mesh geometry={nodes.Cube001_Cube002.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cube002_Cube003.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cube003_Cube004.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cube004_Cube005.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cube005_Cube006.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cube006_Cube007.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cube_Cube001.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cylinder.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cylinder001.geometry} material={materials.WhiteSteelScrew} />
        <mesh geometry={nodes.Cylinder002.geometry} material={materials.BlackPlastic} />
        <mesh geometry={nodes.Cylinder003.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cylinder004.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cylinder005.geometry} material={materials.BlackPlastic} />
        <mesh geometry={nodes.Cylinder006.geometry} material={materials.WhiteSteelScrew} />
        <mesh geometry={nodes.Cylinder007.geometry} material={materials.WhiteSteelScrew} />
        <mesh geometry={nodes.Cylinder008.geometry} material={materials.BlackPlastic} />
        <mesh geometry={nodes.Cylinder009.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cylinder010.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Cylinder011.geometry} material={materials.BlackPlastic} />
        <mesh geometry={nodes.Cylinder012.geometry} material={materials.WhiteSteelScrew} />
        <mesh geometry={nodes.Cylinder013.geometry} material={materials.BlackCoatSteel} />
        <mesh geometry={nodes.Plane001_Plane002.geometry} material={materials.BlackWood} />
      </mesh>
      <group position={[6.297, -0.02, 10.368]} rotation={[0, 1.376, 0]} scale={0.029}
      
    //   onPointerOver={(e) => e.object.material.color.set("white")}
    //   onPointerOut={(e) => e.object.material.color.set("black")}
    //   onPointerDown={() => alert("Chair Clicked")}
      >
        
        <mesh geometry={nodes['Node-Mesh001'].geometry} material={materials['Office_Cha.001']} />
        <mesh geometry={nodes['Node-Mesh001_1'].geometry} material={materials['Office_Cha_1.001']} />
      </group>
      {/* <group position={[3.297, 1.706, 0]} rotation={[0, -1.567, 0]} scale={0.335}>
        <mesh geometry={nodes.SM_ShelfSM_Shelf1_1.geometry} material={materials.lambert2SG} />
        <mesh geometry={nodes.SM_ShelfSM_Shelf1_1_1.geometry} material={materials.lambert3SG} />
      </group> */} 
      <mesh geometry={nodes.Environment_PalmTree_3.geometry} material={materials.Atlas} position={[2.274, -0.015, 2.186]} scale={68.806} />
    </group>
  )
}

useGLTF.preload('/scene.glb')
